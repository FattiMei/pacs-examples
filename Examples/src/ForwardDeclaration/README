This is an very simple example of forward declaration. Here forward
declaration is necessary because class A has a method that takes B&,
while B stores a member of type A!

Often this situation is a sign of poor design, but there are occasions
where this type of "cross referencing" is necessary or useful.

The type of the parameter of a function/method is an incomplete
type. In other words, in the declaration of a function/method (not in
the definition!) the compiler does not need to have all the details of
the type of its parameters or return value. He needs only to know that
they are proper types, whose full declaration however can be
postponed.

Note that in the case of class B we need instead to have at disposal
the full definition of A, so we need to include the corresponding
header file. Indeed, class B is composed with A, so has A as its
member, and the compiler needs to know the size of A to deduce the
size of B. A forward declatation of A is here insufficient and will
lead to a compiler error.