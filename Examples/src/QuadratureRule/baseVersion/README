Basic classes and function for numerical integration

The code contained in this directory produces the basic libary for the example on
numerical integration seen at lecture.

In particular

QuadratureRuleBase.hpp COntains the declaration of the base calss Quadrule, needed to all files
that creates a concrete quadature rule

libquadrule Contains a set of standard quadrature rule and the montecarlo rule (in principle they should go in different files.

QuadratureRule.hpp is a header only file that contains the code for the basis (abstract) class of standard quadrature rules. It must be included by any file that creates a standard quadrature rule

QuadratureRuleWithError.hpp is a header only file that contains a decorator to implement a standard quadrature rule with the computation of an estimate of the error

QuadratureRuleAdaptive.hpp is an header only file that containes a decorator to StandardQuadratureRule to implement adaptive numerical integration

numerical_integration.hpp contains the definition of the class that implements composite quadrature rule

libquadrature is the library that stores the code for composite quadrature rule

it depends on the library libMesh1D, and on GetPot so you have first
to go to src/Utilities and then to src/OneDMesh, look at the readme
files and compile typping in each directory


libintegrands is a library that sores the possible integrands


makedistclean;make dynamic DEBUG=no; make install; make distclean

============ QUADRULES

To compile with dynamic libaries make dynamic

to compile with static libraries

make static (It may not work)

library binding is local unless DEBUG=no is indicated

to install libraries and headers in the directories lib eand include
under the Example directory (where we put headers and libraries of the
course) do

make distclean
make dynamic DEBUG=no
make static DEBUG=no
make install

===

make exec DEBUG=no LIBTYPE=STATIC/DYNAMIC

compiles the exec without recompiling the libraries and do not use
local (i.e.  current directory) linking but used the directories in
Examples/lib. use static/dynamic if you want static or dynamic linking.

Remeber to set LD_LIBRARY_PATH. The rule run_quadrul.sh contains a
script to run the test program. 
